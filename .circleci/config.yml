version: 2
jobs:
  build:
    macos:
      xcode: "10.1.0"
    shell: /bin/bash --login -eo pipefail
    steps:
      - checkout
      - run: git fetch --tags
      - restore_cache:
          key: v1-{{ checksum "setup" }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.HOMEBREW_VERSION }}-{{ .Environment.UNITY_VERSION }}
      - run:
          name: Check Homebrew Version
          command: |
            echo "Checking for Homebrew version $HOMEBREW_VERSION"
            [ `brew --version | sed -n 1p | sed 's/[^0-9.]*\([0-9.]*\).*/\1/'` = $HOMEBREW_VERSION ] || brew update
      - run:
          name: Homebrew Depenendcies
          command: HOMEBREW_NO_AUTO_UPDATE=1 ./setup
      - run:
          shell: /bin/bash -eo pipefail
          name: Setup RVM
          command: |
            unset GEM_HOME
            source /Users/distiller/.rvm/scripts/rvm
            rvm autolibs enable
            rvm list | grep 2.5 || rvm install ruby-2.5
            rvm use ruby-2.5
      - run:
          name: Ruby Gems
          command: |
            gem update bundler
            bundle check || bundle install --path vendor/bundle
      - save_cache:
          paths:
            - /usr/local/Homebrew/
            - ~/Library/Caches/Homebrew
            - vendor/bundle
            - ~/.rvm
          key: v1-{{ checksum "setup" }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.HOMEBREW_VERSION }}-{{ .Environment.UNITY_VERSION }}
      - run:
          name: Build Teak SDK
          command: |
            export UNITY_HOME=/Applications/Unity-$UNITY_VERSION/
            bundle exec rake
            mkdir -p build/$UNITY_VERSION
            mv Teak.unitypackage build/$UNITY_VERSION/Teak.unitypackage
      - run:
          command: |
            mkdir -p /tmp/unity_logs
            cp unity.log /tmp/unity_logs
            bundle exec rake unity:returnlicense
          when: on_fail
      - store_artifacts:
          path: /tmp/unity_logs
      - persist_to_workspace:
          root: .
          paths:
            - build/*
      - run:
          name: ReadTheDocs.org Unified Docs
          command: curl -X POST -d "branches=master" -d "token=$RTD_TOKEN" https://readthedocs.org/api/v2/webhook/teak/41148/
  deploy_versioned:
    docker:
      - image: circleci/ruby:latest
    steps:
      - checkout
      - run: git fetch --tags
      - restore_cache:
          key: v0-{{ checksum "Gemfile.lock" }}
      - run:
          name: Ruby Gems
          command: |
            gem update bundler
            bundle check || bundle install --path vendor/bundle
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - save_cache:
          paths:
            - vendor/bundle
          key: v0-{{ checksum "Gemfile.lock" }}
      - attach_workspace:
          at: .
      - run:
          name: Upload SDK to S3
          command: |
            aws s3 cp build/$UNITY_VERSION/Teak.unitypackage s3://teak-build-artifacts/unity/Teak-$(git describe --tags --always).unitypackage --acl public-read
      # - run:
      #     name: Trigger Cleanroom Build
      #     command: bundle exec rake build:cleanroom
  deploy_latest:
    docker:
      - image: circleci/ruby:latest
    steps:
      - checkout
      - run: git fetch --tags
      - restore_cache:
          key: v0-{{ checksum "Gemfile.lock" }}
      - run:
          name: Ruby Gems
          command: bundle check || bundle install --path vendor/bundle
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - save_cache:
          paths:
            - vendor/bundle
          key: v0-{{ checksum "Gemfile.lock" }}
      - attach_workspace:
          at: .
      - run:
          name: Upload SDK to S3
          command: |
            aws s3 cp build/$UNITY_VERSION/Teak.unitypackage s3://teak-build-artifacts/unity/Teak.unitypackage --acl public-read
workflows:
  version: 2
  un-tagged-build:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
  tagged-build:
    jobs:
      - build:
          context: unity-5
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy_versioned:
          context: unity-5
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy_latest:
          context: unity-5
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
